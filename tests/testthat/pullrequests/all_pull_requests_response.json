{
	"data": {
		"repository": {
			"pullRequests": {
				"nodes": [
					{
						"number": 6,
						"title": "Feature/multisource",
						"author": {
							"login": "dpastoor"
						},
						"body": "",
						"bodyText": "",
						"milestone": null,
						"createdAt": "2018-11-28T14:09:21Z",
						"mergedBy": {
							"login": "dpastoor"
						},
						"mergedAt": "2018-11-29T15:48:27Z",
						"baseRefName": "master",
						"state": "MERGED"
					},
					{
						"number": 12,
						"title": "refactor: new repository url",
						"author": {
							"login": "dpastoor"
						},
						"body": "",
						"bodyText": "",
						"milestone": null,
						"createdAt": "2018-11-29T15:52:31Z",
						"mergedBy": {
							"login": "dpastoor"
						},
						"mergedAt": "2018-11-29T15:54:23Z",
						"baseRefName": "master",
						"state": "MERGED"
					},
					{
						"number": 14,
						"title": "Refactor/isolation",
						"author": {
							"login": "dpastoor"
						},
						"body": "enforce deeper isolation during R CMDs to keep the pkgr.yml self contained\r\n\r\nprevents conflicts against env vars or other settings in user/site level Renv/profiles.\r\n\r\nThis will likely need more iteration to allow opt-in of certain globally set information.",
						"bodyText": "enforce deeper isolation during R CMDs to keep the pkgr.yml self contained\nprevents conflicts against env vars or other settings in user/site level Renv/profiles.\nThis will likely need more iteration to allow opt-in of certain globally set information.",
						"milestone": null,
						"createdAt": "2018-12-01T21:42:42Z",
						"mergedBy": {
							"login": "dpastoor"
						},
						"mergedAt": "2018-12-09T15:50:13Z",
						"baseRefName": "release/v0.1.0",
						"state": "MERGED"
					},
					{
						"number": 19,
						"title": "implement Rscripting so can run arbitrary R code to get necessary metadata",
						"author": {
							"login": "dpastoor"
						},
						"body": "Useful for things like inspecting which version of R is running",
						"bodyText": "Useful for things like inspecting which version of R is running",
						"milestone": null,
						"createdAt": "2018-12-09T15:49:17Z",
						"mergedBy": {
							"login": "dpastoor"
						},
						"mergedAt": "2018-12-10T23:15:59Z",
						"baseRefName": "release/v0.1.0",
						"state": "MERGED"
					},
					{
						"number": 20,
						"title": "release/v0.1.0",
						"author": {
							"login": "dpastoor"
						},
						"body": "initial general release",
						"bodyText": "initial general release",
						"milestone": {
							"title": "v0.1.0"
						},
						"createdAt": "2018-12-09T15:51:42Z",
						"mergedBy": {
							"login": "dpastoor"
						},
						"mergedAt": "2019-02-09T20:05:46Z",
						"baseRefName": "master",
						"state": "MERGED"
					},
					{
						"number": 22,
						"title": "Feat/parallel cran dls",
						"author": {
							"login": "dpastoor"
						},
						"body": "",
						"bodyText": "",
						"milestone": null,
						"createdAt": "2018-12-09T17:00:36Z",
						"mergedBy": {
							"login": "dpastoor"
						},
						"mergedAt": "2018-12-10T23:16:09Z",
						"baseRefName": "release/v0.1.0",
						"state": "MERGED"
					},
					{
						"number": 26,
						"title": "fix: error if non-200 result returns with html instead of PACKAGES",
						"author": {
							"login": "dpastoor"
						},
						"body": "also catch goroutine panic on closed channel as if the first repo failed\r\nthe func would return and close the channel before the\r\nother goroutine could send\r\n\r\nfixes #25",
						"bodyText": "also catch goroutine panic on closed channel as if the first repo failed\nthe func would return and close the channel before the\nother goroutine could send\nfixes #25",
						"milestone": null,
						"createdAt": "2018-12-11T01:02:34Z",
						"mergedBy": {
							"login": "dpastoor"
						},
						"mergedAt": "2018-12-12T03:13:27Z",
						"baseRefName": "release/v0.1.0",
						"state": "MERGED"
					},
					{
						"number": 30,
						"title": "feat: environment variable expansion",
						"author": {
							"login": "dpastoor"
						},
						"body": "example of use in multirepo-source shows replacing a url with an environment variable\r\n\r\nthis will also help when using pkgr within matrix builds, such as installing iteratively where a single config file can be used.\r\n\r\nThis compliments viper's ability to detect environment variables with the prefix `PKGR`\r\n\r\nso could still do `PKGR_Library` instead of `Library: path/to/lib`, however viper could not directly support configuration files themselves, where situations such as: `Library: some/path/with/${somevar}` are reasonable.",
						"bodyText": "example of use in multirepo-source shows replacing a url with an environment variable\nthis will also help when using pkgr within matrix builds, such as installing iteratively where a single config file can be used.\nThis compliments viper's ability to detect environment variables with the prefix PKGR\nso could still do PKGR_Library instead of Library: path/to/lib, however viper could not directly support configuration files themselves, where situations such as: Library: some/path/with/${somevar} are reasonable.",
						"milestone": null,
						"createdAt": "2018-12-12T04:24:43Z",
						"mergedBy": {
							"login": "dpastoor"
						},
						"mergedAt": "2018-12-12T04:24:49Z",
						"baseRefName": "release/v0.1.0",
						"state": "MERGED"
					},
					{
						"number": 31,
						"title": "Cleanup/dl messages",
						"author": {
							"login": "dpastoor"
						},
						"body": "goal to clean up and refactor the logging to reduce message clutter, especially at the info level, as well as simplify the logging interface",
						"bodyText": "goal to clean up and refactor the logging to reduce message clutter, especially at the info level, as well as simplify the logging interface",
						"milestone": null,
						"createdAt": "2019-01-18T03:48:12Z",
						"mergedBy": {
							"login": "dpastoor"
						},
						"mergedAt": "2019-01-20T02:36:08Z",
						"baseRefName": "release/v0.1.0",
						"state": "MERGED"
					},
					{
						"number": 32,
						"title": "Feat/env",
						"author": {
							"login": "dpastoor"
						},
						"body": "add the capability to set environment variables during installation of packages. \r\n\r\nThe overall internal representation is to now store two sets of env variables - global ones that should be applied to every package during install, as well as local ones per package.",
						"bodyText": "add the capability to set environment variables during installation of packages.\nThe overall internal representation is to now store two sets of env variables - global ones that should be applied to every package during install, as well as local ones per package.",
						"milestone": null,
						"createdAt": "2019-01-20T21:47:26Z",
						"mergedBy": {
							"login": "dpastoor"
						},
						"mergedAt": "2019-02-04T17:59:43Z",
						"baseRefName": "release/v0.1.0",
						"state": "MERGED"
					}
				]
			}
		}
	}
}